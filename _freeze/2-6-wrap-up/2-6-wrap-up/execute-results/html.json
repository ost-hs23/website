{
  "hash": "fe01def33d3ec995ca533fdfaaba4bfa",
  "result": {
    "markdown": "---\ntitle: \"Wrap-up\"\nsubtitle: \"OST-HS23: Open Science Tools <br> authoring and publishing workflows for collaborative scientific writing\"\nauthor: \"Lars Sch√∂bitz\"\ndate: \"2023-10-24\"\ndate-format: long\nfooter: \"[{{< fa link >}} ost-hs23.github.io/website/](https://ost-hs23.github.io/website/)\"\nlogo: \"../images/ghe-square-logo-vector.svg\"\nformat:\n  revealjs:\n    theme: ../style/slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\neditor: source\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n# Parting remarks\n\n## Learn more\n\n::: learn-more\n[https://quarto.org](https://quarto.org/)\n\n\n```{=html}\n<iframe src=\"https://quarto.org/\" width=\"100%\" height=\"550\" title=\"Quarto Website\"></iframe>\n```\n\n:::\n\n## Follow up with...\n\n::: learn-more\n[quarto.org/docs/blog](https://quarto.org/docs/blog)\n\n\n```{=html}\n<iframe src=\"https://quarto.org/docs/blog/\" width=\"100%\" height=\"550\" title=\"Quarto Website\"></iframe>\n```\n\n:::\n\n# Troubleshooting\n\n## Creating a minimum reproducible example\n\n- For any coding question, start by creating a minimum reproducible example (reprex)\n\n- You'll find that this task is less than trivial for a complex Quarto project\n\n- But there's a good chance you'll solve your problem while creating the reprex \n\n## Getting help\n\n- Join ghe-open room on Matrix Chat with Element: <https://matrix.to/#/#ghe-open:staffchat.ethz.ch>\n\n- Review the Quarto FAQ: <https://quarto.org/docs/faq>\n\n- Have a question, post on GitHub Discussion: <https://github.com/quarto-dev/quarto-cli/discussions>\n\n- Found (or think you found) a bug or have a feature request, open an issue: <https://github.com/quarto-dev/quarto-cli/issues>\n\n# Fin\n\n## Thank you! \n\n## Questions\n\n::: task\nAny questions / anything you'd like to review or learn before we wrap up this course?\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}